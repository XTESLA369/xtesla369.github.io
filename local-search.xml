<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ha</title>
    <link href="/2020/08/08/ha/"/>
    <url>/2020/08/08/ha/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2020/08/08/%E3%80%90Blender%E3%80%91AnimationNodes/"/>
    <url>/2020/08/08/%E3%80%90Blender%E3%80%91AnimationNodes/</url>
    
    <content type="html"><![CDATA[<h2 id="【插件相关】"><a href="#【插件相关】" class="headerlink" title="【插件相关】"></a>【插件相关】</h2><ul><li><p><a href="https://github.com/JacquesLucke/animation_nodes">AnimationNodes插件下载地址</a></p></li><li><p><a href="https://animation-nodes-manual.readthedocs.io/en/latest/user_guide/getting_started/interface.html">AnimationNodes插件官方文档</a></p></li><li><p><a href="https://animation-nodes.com/#download">AnimationNodes插件官网</a> </p></li><li><p><a href="https://zhuanlan.zhihu.com/p/129651081">如何安装Blender扩展插件</a> </p></li><li><p>Shift+A创建</p></li><li><p>Ctrl+A 搜索</p></li><li><p>调试的话键入Viewer，不是Debug</p></li></ul><h2 id="【导图】"><a href="#【导图】" class="headerlink" title="【导图】"></a>【导图】</h2><h2 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h2><p>本篇根据具体每一个实战项目来讲解，共  个实战项目。（后续会不断更新）</p><h2 id="一、人物篇："><a href="#一、人物篇：" class="headerlink" title="一、人物篇："></a>一、人物篇：</h2><h3 id="【1-1】人体流线"><a href="#【1-1】人体流线" class="headerlink" title="【1.1】人体流线"></a>【1.1】人体流线</h3><h3 id="【1-2】人体运动"><a href="#【1-2】人体运动" class="headerlink" title="【1.2】人体运动"></a>【1.2】人体运动</h3><h2 id="二、模型变换"><a href="#二、模型变换" class="headerlink" title="二、模型变换"></a>二、模型变换</h2><h3 id="【2-2】"><a href="#【2-2】" class="headerlink" title="【2.2】"></a>【2.2】</h3><h2 id="【2-1】汽车变换"><a href="#【2-1】汽车变换" class="headerlink" title="【2.1】汽车变换"></a>【2.1】汽车变换</h2><p>我们可以到这里当非常多超级精美的汽车模型（有些人当下来直接挂淘宝店卖了，如果你有兴趣的话，反正我是没兴趣，掌握技法制作整合资源总比倒卖资源强）</p><p>Free Car 3D Models<a href="http://www.cgtrader.com/">www.cgtrader.com</a></p><p><img src="https://pic1.zhimg.com/80/v2-eb861fb409ab97b094bbd4441be632db_1440w.png" alt="img"></p><p>我们就先免费下载个Jeep和野马吧。（可以直接下载Blender blend格式），后面append即可</p><p>人家这直接渲染出来还不错呢。（简单截图，没有渲染）</p><p><img src="https://pic3.zhimg.com/80/v2-98b476de05382f78deb46a95f044de76_1440w.png" alt="img"></p><p><img src="https://pic3.zhimg.com/80/v2-0191a1b0139915cfef052bcc4d218d42_1440w.png" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-9fd476693d05650d690779f9bce32795_1440w.png" alt="img"></p><p>我们可以直接在另一个文件中整理好，然后复制粘贴，也可以直接append。</p><p>缩放Jeep车，至跟野马差不多大小和位置（比对轮毂大小）。（切换到三视图来调整）</p><p>选中全部模型，在AN中（Animation Nodes自带，也是它的简称），新建ID Keys。</p><p><img src="https://pic3.zhimg.com/80/v2-cdb04938d74e7e11fecdf2b3b2affb4b_1440w.png" alt="img"></p><p>然后点击From Current Transforms 以记录当前位置。</p><p><img src="https://pic4.zhimg.com/80/v2-b91c31856794b080af6252810ee9a30c_1440w.png" alt="img"></p><p>隐藏野马汽车模型。</p><ul><li>Collection Info 获取两个汽车 集（可以理解为文件夹），选取Jeep汽车（注意模型面数不能太高，如这个Jeep足足有1300万个面，CPU直接爆到95%，所以可以先用减面工具</li><li>Object Matrix Output——</li><li>Object ID Key——复原模型的位置变化，ID Key选择我们刚刚定义好的。</li></ul><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="【2-2】文字变换"><a href="#【2-2】文字变换" class="headerlink" title="【2.2】文字变换"></a>【2.2】文字变换</h3><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h2 id="三、文字篇："><a href="#三、文字篇：" class="headerlink" title="三、文字篇："></a>三、文字篇：</h2><h3 id="【3-1】程序化生成许多文字模型"><a href="#【3-1】程序化生成许多文字模型" class="headerlink" title="【3.1】程序化生成许多文字模型"></a>【3.1】程序化生成许多文字模型</h3><p><img src="https://pic3.zhimg.com/v2-a6caadd07448fd29fbe10e7101a0af06_b.png" alt="img"></p><ul><li><strong>Grid Mesh/Line Mesh</strong>——控制在网格上生成还是直线上生成，类似UE UI的Grid Panel/Horizontal Vertical Box</li><li><strong>X/Y Divisions</strong>——控制Spawn的数量</li><li><strong>Length/Width</strong>——控制间距</li><li><strong>Mesh Info</strong>——获取网格体的顶点/边/多边形信息</li><li><strong>Get List Length</strong>——类似获取数组的总长度，Array Length</li><li><strong>Viewer</strong>——用以调试值，类似UE蓝图的Print String/ 材质的Debug Vector/Scalar Values</li><li><strong>Object Instancer</strong>——实例化模型，在世界场景中生成什么类型的模型，类似UE把Text/Image/Button放入 UI的 G/H/V Box当中</li><li><strong>对于Blender的话，有Grease Pencil、Empty、Curve 2D/3D、PointLamp、Camera、Text、Mesh</strong></li><li><strong>Invoke Subprogram</strong>——调用函数，类似UE的Custom Event 调用</li><li><strong>类型有Group组、Loop循环函数、Script自定义Python脚本</strong></li><li><strong>Loop Input</strong>——类似UE的Custom Event声明，这里直接把命名也直接涵盖了，作用就是for loop把文字变成相应序列的数字</li><li>添加两个参数/迭代器，一个Object，一个Vector，用于接收对应上面函数调用中的两变量。</li><li><strong>Convert to Text</strong>——类似UE的integer/float to string/text 啦等等，这里是将integer convert to text，数字变文字</li><li><strong>Create Text List+Join Texts</strong>——两个要配合一块用，create list相当于append string，先要把他们（A和B）合并起来，然后Join Texts在A和B间添加其他文字（要不然直接把List连到输出Text上，会跟UE一样 Get List/Array Element）</li><li><strong>Seperate Vector</strong>——类似UE的Break Vector，把三维向量分成3个scalar标量</li><li><strong>Text Object Output</strong>——最终输出（注意要点小圆点、变成蓝色）</li><li>object——对应object mode下的模型类型</li><li>text——对应edit mode下的文字名称</li><li>x/y offset——对应上面grid mesh的间距</li></ul><h2 id="【3-2】倒计时效果"><a href="#【3-2】倒计时效果" class="headerlink" title="【3.2】倒计时效果"></a>【3.2】倒计时效果</h2><ol><li>Shift+A 在世界场景中创建一个文字模型</li><li>填写下列蓝图</li></ol><p><img src="https://pic2.zhimg.com/80/v2-2faff0819029be4d98de81c6c32650ce_1440w.png" alt="img"></p><ul><li>TimeInfo——输出帧数</li><li>Animate Float——随着空格预览，提取帧数变化中对应的帧数数字。</li><li>Start/End——控制时长及方向，根据输出设置中的Frame Rate来计算</li><li>Duration——末尾关键帧的数值，值为Start/End*Frame Rate。</li><li>Time输出是帧数Duration、Result输出是时间Start/End</li><li>Float To Text——将数字变成文字</li><li>Min Length——总共的有效位数，显示的时候自动-1，如min length为10，显示时共有9个有效数字</li><li>Decimals——小数点后有几位</li><li>Delay time——延迟</li><li>Timeline中的Start帧数可以设置成0，要不然不是从10开始的。</li></ul><p><img src="https://pic3.zhimg.com/80/v2-3726e739b1342159f5a63925183ba897_1440w.gif" alt="img"></p><h2 id="-2"><a href="#-2" class="headerlink" title=""></a></h2>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
